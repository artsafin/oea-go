// Code generated by "jade.go"; DO NOT EDIT.

package tpl

import (
	"io"

	dto "github.com/artsafin/ofa-go/dto"
)

const (
	post__0  = `<p>Please approve the following items to be included in:</p><h3>`
	post__1  = ` Invoice</h3><table border="0" cellpadding="2" cellspacing="0" width="80%" class="standart"><thead><tr><th width="`
	post__2  = `">Item</th><th width="`
	post__3  = `">Category</th><th width="`
	post__4  = `">Comment</th><th>RUB</th><th>EUR</th></tr></thead><tbody>`
	post__5  = `<tr><td></td><td><b>Expenses Total</b></td><td></td><td></td><td align="right">`
	post__6  = `</td></tr><tr><td></td><td></td><td></td><td><b>Return of rounding</b></td><td align="right" style="color: red">-`
	post__7  = `</td></tr><tr><td></td><td></td><td>`
	post__8  = ` hours</td><td><b>Rounding</b></td><td align="right">`
	post__9  = `</td></tr><tr><td></td><td></td><td></td><td><b>Total</b></td><td align="right">`
	post__10 = `</td></tr></tbody></table><h3>Report on money usage (`
	post__11 = ` &ndash; `
	post__12 = `)</h3><table border="0" cellpadding="2" cellspacing="0" width="80%" class="standart"><thead><tr><th width="`
	post__13 = `">Invoice</th><th width="`
	post__14 = `">Subject</th><th width="`
	post__15 = `">Tag</th><th width="`
	post__16 = `">Status</th><th width="`
	post__17 = `">Requested Amount RUB</th><th width="`
	post__18 = `">Actually spent</th><th width="`
	post__19 = `">Pending spend</th><th width="`
	post__20 = `">Under/over-use</th><th width="`
	post__21 = `">Pending spend comment</th></tr></thead><tbody>`
	post__22 = `<tr style="font-weight: bold"><td>`
	post__23 = ` Subtotal</td><td></td><td></td><td></td><td>`
	post__24 = `</td><td>`
	post__27 = `</td><td></td></tr><tr style="font-weight: bold"><td>Grand total</td><td></td><td></td><td></td><td>`
	post__31 = `</td><td></td></tr></tbody></table><p><br/><br/></p><p>The signed invoice from my side is in attachment.</p>`
	post__32 = `<tr><td></td><td><b>`
	post__33 = `</b></td><td></td><td align="right">`
	post__34 = `</td><td align="right">`
	post__35 = `</td></tr>`
	post__36 = `<tr><td>`
	post__42 = `<tr bgcolor="`
	post__43 = `"><td>`
	post__44 = `</td><td></td><td></td><td>`
	post__49 = `</td><td></td></tr>`
)

func Post(invoice *dto.Invoice, expenseGroups dto.ExpenseGroupMap, history *dto.History, wr io.Writer) {
	buffer := &WriterAsBuffer{wr}

	buffer.WriteString(post__0)
	WriteAll(invoice.InvoiceDateYm(), true, buffer)
	buffer.WriteString(post__1)
	WriteInt(int64(400), buffer)
	buffer.WriteString(post__2)
	WriteInt(int64(100), buffer)
	buffer.WriteString(post__3)
	WriteInt(int64(500), buffer)
	buffer.WriteString(post__4)

	for _, group := range expenseGroups {
		for _, expense := range group.Items {
			buffer.WriteString(post__36)
			WriteAll(expense.Subject, true, buffer)
			buffer.WriteString(post__24)
			WriteAll(expense.Category, true, buffer)
			buffer.WriteString(post__24)
			WriteAll(expense.Comment, true, buffer)
			buffer.WriteString(post__34)
			WriteAll(expense.AmountRub.String(), true, buffer)
			buffer.WriteString(post__34)
			WriteAll(expense.AmountEur.String(), true, buffer)
			buffer.WriteString(post__35)

		}
		buffer.WriteString(post__32)
		WriteAll(group.Name, true, buffer)
		buffer.WriteString(post__33)
		WriteAll(group.TotalRub.String(), true, buffer)
		buffer.WriteString(post__34)
		WriteAll(group.TotalEur.String(), true, buffer)
		buffer.WriteString(post__35)

	}
	buffer.WriteString(post__5)
	WriteAll(invoice.Subtotal, true, buffer)
	buffer.WriteString(post__6)
	WriteAll(invoice.ReturnOfRounding.String(), true, buffer)
	buffer.WriteString(post__7)
	WriteAll(invoice.Hours, true, buffer)
	buffer.WriteString(post__8)
	WriteAll(invoice.HourRateRounding.String(), true, buffer)
	buffer.WriteString(post__9)
	WriteAll(invoice.TotalEur.String(), true, buffer)
	buffer.WriteString(post__10)
	WriteAll(history.FirstInvoice.InvoiceDateYm(), true, buffer)
	buffer.WriteString(post__11)
	WriteAll(history.LastInvoice.InvoiceDateYm(), true, buffer)
	buffer.WriteString(post__12)
	WriteInt(int64(160), buffer)
	buffer.WriteString(post__13)
	WriteInt(int64(230), buffer)
	buffer.WriteString(post__14)
	WriteInt(int64(90), buffer)
	buffer.WriteString(post__15)
	WriteInt(int64(40), buffer)
	buffer.WriteString(post__16)
	WriteInt(int64(150), buffer)
	buffer.WriteString(post__17)
	WriteInt(int64(150), buffer)
	buffer.WriteString(post__18)
	WriteInt(int64(150), buffer)
	buffer.WriteString(post__19)
	WriteInt(int64(150), buffer)
	buffer.WriteString(post__20)
	WriteInt(int64(310), buffer)
	buffer.WriteString(post__21)

	for _, invoice := range history.Invoices {
		buffer.WriteString(post__42)
		WriteAll(ternary(invoice.HasPendingSpends(), "#F6F9D4", "#EEEEEE"), true, buffer)
		buffer.WriteString(post__43)
		WriteAll(invoice.No, true, buffer)
		buffer.WriteString(post__44)
		WriteAll(invoice.Status, true, buffer)
		buffer.WriteString(post__24)
		WriteAll(invoice.ExpensesRub, true, buffer)
		buffer.WriteString(post__24)
		WriteAll(invoice.ActuallySpent, true, buffer)
		buffer.WriteString(post__24)
		WriteAll(invoice.PendingSpend, true, buffer)
		buffer.WriteString(post__24)
		WriteAll(invoice.Balance, true, buffer)
		buffer.WriteString(post__49)

	}
	for _, expense := range history.LastInvoice.Expenses {
		buffer.WriteString(post__42)
		WriteAll(ternary(expense.HasPendingSpends(), "#F6F9D4", "#FFFFFF"), true, buffer)
		buffer.WriteString(post__43)
		WriteAll(expense.Invoice, true, buffer)
		buffer.WriteString(post__24)
		WriteAll(expense.Subject, true, buffer)
		buffer.WriteString(post__24)
		WriteAll(expense.Category, true, buffer)
		buffer.WriteString(post__24)
		WriteAll(expense.Status, true, buffer)
		buffer.WriteString(post__24)
		WriteAll(expense.AmountRub, true, buffer)
		buffer.WriteString(post__24)
		WriteAll(expense.ActuallySpent, true, buffer)
		buffer.WriteString(post__24)
		WriteAll(expense.PendingSpend, true, buffer)
		buffer.WriteString(post__24)
		WriteAll(expense.Balance, true, buffer)
		buffer.WriteString(post__49)

	}
	buffer.WriteString(post__22)
	WriteAll(history.LastInvoice.No, true, buffer)
	buffer.WriteString(post__23)
	WriteAll(history.LastInvoice.ExpensesRub, true, buffer)
	buffer.WriteString(post__24)
	WriteAll(history.LastInvoice.ActuallySpent, true, buffer)
	buffer.WriteString(post__24)
	WriteAll(history.LastInvoice.PendingSpend, true, buffer)
	buffer.WriteString(post__24)
	WriteAll(history.LastInvoice.Balance, true, buffer)
	buffer.WriteString(post__27)
	WriteAll(history.GrandTotal.ExpensesRub, true, buffer)
	buffer.WriteString(post__24)
	WriteAll(history.GrandTotal.ActuallySpent, true, buffer)
	buffer.WriteString(post__24)
	WriteAll(history.GrandTotal.PendingSpend, true, buffer)
	buffer.WriteString(post__24)
	WriteAll(history.GrandTotal.Balance, true, buffer)
	buffer.WriteString(post__31)

}
